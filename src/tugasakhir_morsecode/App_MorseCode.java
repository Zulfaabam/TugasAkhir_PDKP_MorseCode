/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package tugasakhir_morsecode;
import jaco.mp3.player.MP3Player;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import java.io.*;
import com.sun.speech.freetts.*;
/**
 *
 * @author Zulfa Fatah Akbar A
 */
public class App_MorseCode extends javax.swing.JFrame {

    /**
     * Creates new form App_MorseCode
     */
    public App_MorseCode() {
        initComponents();
    }
    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        convertButon = new javax.swing.JButton();
        playButton = new javax.swing.JButton();
        clearButton = new javax.swing.JButton();
        comboBox = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        userText = new javax.swing.JTextArea();
        jScrollPane2 = new javax.swing.JScrollPane();
        outputField = new javax.swing.JTextArea();
        title = new javax.swing.JLabel();
        backButton = new javax.swing.JButton();
        background = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("McD");
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        convertButon.setBackground(new java.awt.Color(0, 0, 0));
        convertButon.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        convertButon.setForeground(new java.awt.Color(153, 255, 255));
        convertButon.setIcon(new javax.swing.ImageIcon("C:\\Users\\Zulfa Fatah Akbar A\\Pictures\\Ingredients\\Two arrows-resized.png")); // NOI18N
        convertButon.setText("Convert");
        convertButon.setToolTipText("");
        convertButon.setAlignmentX(0.5F);
        convertButon.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(153, 255, 255)));
        convertButon.setContentAreaFilled(false);
        convertButon.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        convertButon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                convertButonActionPerformed(evt);
            }
        });
        getContentPane().add(convertButon, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 290, 110, 60));

        playButton.setBackground(new java.awt.Color(0, 0, 0));
        playButton.setIcon(new javax.swing.ImageIcon("C:\\Users\\Zulfa Fatah Akbar A\\Pictures\\Ingredients\\sound-sign-icon-elements-web-neon-style-icons-simple-websites-design-mobile-app-info-graphics-dark-gradient-134638377 (2).jpg")); // NOI18N
        playButton.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(102, 102, 255)));
        playButton.setContentAreaFilled(false);
        playButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                playButtonActionPerformed(evt);
            }
        });
        getContentPane().add(playButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 490, 50, 50));

        clearButton.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        clearButton.setForeground(new java.awt.Color(153, 0, 153));
        clearButton.setIcon(new javax.swing.ImageIcon("C:\\Users\\Zulfa Fatah Akbar A\\Pictures\\Ingredients\\Trash icon (2)-resized.jpg")); // NOI18N
        clearButton.setAlignmentX(0.5F);
        clearButton.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(153, 255, 255)));
        clearButton.setContentAreaFilled(false);
        clearButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearButtonActionPerformed(evt);
            }
        });
        getContentPane().add(clearButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 490, 50, 50));

        comboBox.setFont(new java.awt.Font("Swis721 WGL4 BT", 0, 11)); // NOI18N
        comboBox.setForeground(new java.awt.Color(0, 0, 0));
        comboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Choose Method", "Text to Morse", "Morse to Text" }));
        comboBox.setBorder(null);
        getContentPane().add(comboBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 120, 110, -1));

        userText.setBackground(new java.awt.Color(0, 0, 0));
        userText.setColumns(20);
        userText.setForeground(new java.awt.Color(255, 255, 255));
        userText.setLineWrap(true);
        userText.setRows(5);
        userText.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Input your text/code here", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Tahoma", 0, 12), new java.awt.Color(0, 153, 255))); // NOI18N
        userText.setCaretColor(new java.awt.Color(255, 255, 255));
        jScrollPane1.setViewportView(userText);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 160, 450, -1));

        outputField.setEditable(false);
        outputField.setBackground(new java.awt.Color(0, 0, 0));
        outputField.setColumns(20);
        outputField.setForeground(new java.awt.Color(255, 255, 255));
        outputField.setLineWrap(true);
        outputField.setRows(5);
        outputField.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Result", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 12), new java.awt.Color(0, 153, 255))); // NOI18N
        outputField.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jScrollPane2.setViewportView(outputField);

        getContentPane().add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 360, 450, -1));

        title.setFont(new java.awt.Font("Tempus Sans ITC", 1, 18)); // NOI18N
        title.setForeground(new java.awt.Color(255, 204, 0));
        title.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        title.setText("Morse Code Decipher");
        title.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 0, 0), 2));
        getContentPane().add(title, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 40, 230, -1));

        backButton.setBackground(new java.awt.Color(0, 0, 0));
        backButton.setForeground(new java.awt.Color(153, 0, 0));
        backButton.setText("Back");
        backButton.setAlignmentX(0.5F);
        backButton.setBorder(null);
        backButton.setContentAreaFilled(false);
        backButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backButtonActionPerformed(evt);
            }
        });
        getContentPane().add(backButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 30, 60, 20));

        background.setIcon(new javax.swing.ImageIcon("C:\\Users\\Zulfa Fatah Akbar A\\Pictures\\Ingredients\\unnamed (3).jpg")); // NOI18N
        getContentPane().add(background, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 600, 600));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void convertButonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_convertButonActionPerformed
        if (comboBox.getSelectedIndex() == 0){
            JOptionPane.showMessageDialog(null, "Choose the method first!");
        }
        if (comboBox.getSelectedIndex() == 1){
            String[] morseCode = {"/", "--..--", ".-.-.-", "..--..", "-----",
            ".----", "..---", "...---", "....-", ".....", "-....", "--...",
            "---..", "----.", ".-", "-...", "-.-.", "-..", ".", "..-.", "--.",
            "....", "..", ".---", "-.-", ".-..", "--", "-.", "---", ".--.",
            "--.-", ".-.", "...", "-", "..-", "...-", ".--", "-..-", "-.--",
            "--..", ".----.", "-..-.", "---...", "-.-.-.", ".-.-.", "-....-",
            "-...-", ".-..-.", "-.--.", "-.--.-", ".-...", "..--.-", "...-..-",
            ".--.-.", "-.-.--"};

            String latin = " ,.?0123456789abcdefghijklmnopqrstuvwxyz'/:;+-=\"()&_$@!";
            char[] latinArray = latin.toCharArray();

            ArrayList<Integer> holdList = new ArrayList<>();
            StringBuilder holdBuilder = new StringBuilder();
            
            String userString = userText.getText().toLowerCase();
            char[] userArray = userString.toCharArray();

            for(int i = 0; i < userArray.length; i++) {
                for(int n = 0; n < latinArray.length; n++) {
                    if(userArray[i] == latinArray[n]) {
                        holdList.add(n);
                    }
                }
            }
            for(int i = 0; i < holdList.size(); i++) {
                holdBuilder.append(morseCode[holdList.get(i)] + " ");
            }
            String morCo = holdBuilder.toString();
            outputField.setText(morCo);
        }
        if (comboBox.getSelectedIndex() == 2){
            String[] morseCode = {"/", "--..--", ".-.-.-", "..--..", "-----",
            ".----", "..---", "...---", "....-", ".....", "-....", "--...",
            "---..", "----.", ".-", "-...", "-.-.", "-..", ".", "..-.", "--.",
            "....", "..", ".---", "-.-", ".-..", "--", "-.", "---", ".--.",
            "--.-", ".-.", "...", "-", "..-", "...-", ".--", "-..-", "-.--",
            "--..", ".----.", "-..-.", "---...", "-.-.-.", ".-.-.", "-....-",
            "-...-", ".-..-.", "-.--.", "-.--.-", ".-...", "..--.-", "...-..-",
            ".--.-.", "-.-.--"};

            char[] latin = {' ', ',', '.', '?', '0', '1', '2', '3', '4', '5', '6',
                            '7', '8', '9', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h',
                            'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's',
                            't', 'u', 'v', 'w', 'x', 'y', 'z', '\'', '/', ':', ';',
                            '+', '-', '=', '"', '(', ')', '&', '_', '$', '@', '!'};
        
            ArrayList<Integer> holdList = new ArrayList<>();
            StringBuilder holdBuilder = new StringBuilder();

            String userMorsec = userText.getText();
            String[] morsec = userMorsec.split(" ");
        

            for(int i = 0; i < morsec.length; i++) {
                for(int n = 0; n < morseCode.length; n++) {
                    if(morseCode[n].equals(morsec[i])) {
                        holdList.add(n);
                    }
                }
            }
            for(int i = 0; i < holdList.size(); i++) {
                holdBuilder.append(latin[holdList.get(i)]);
            }
            String ltn = holdBuilder.toString();
            outputField.setText(ltn);
        }
    }//GEN-LAST:event_convertButonActionPerformed
    
    public static final String dotSound = "C:\\Users\\Zulfa Fatah Akbar A\\Documents\\NetBeansProjects\\Audio\\dit.mp3";
    MP3Player dotPlayer = new MP3Player(new File(dotSound));
    
    public static final String dashSound = "C:\\Users\\Zulfa Fatah Akbar A\\Documents\\NetBeansProjects\\Audio\\dah.mp3";
    MP3Player dashPlayer = new MP3Player(new File(dashSound));
    
    private static final String VOICENAME = "kevin16";
    
    private void playButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_playButtonActionPerformed
        if (comboBox.getSelectedIndex() == 0){
            JOptionPane.showMessageDialog(null, "Choose the method first!");
            
        }
        if (comboBox.getSelectedIndex() == 1){
            String morCo2 = outputField.getText();
            char[] morCo2c = morCo2.toCharArray();
            
            try{
                for (char c : morCo2c){
                    if ('.' == c){
                        dotPlayer.play();
                        Thread.sleep(150);
                    } 
                    else if ('-' == c){
                        dashPlayer.play();
                        Thread.sleep(150);
                    } 
                    else {
                        Thread.sleep(500);
                    }
                }
            } 
            catch(Exception e){
                
            }  
        }
        if (comboBox.getSelectedIndex() == 2){
            Voice voice;
            VoiceManager vm = VoiceManager.getInstance();
            voice = vm.getVoice(VOICENAME);
            
            voice.allocate();
            
            try{
                voice.speak(outputField.getText());
            }
            catch(Exception e){
                
            } 
        }
    }//GEN-LAST:event_playButtonActionPerformed

    private void clearButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearButtonActionPerformed
        userText.setText("");
        outputField.setText("");
    }//GEN-LAST:event_clearButtonActionPerformed

    private void backButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backButtonActionPerformed
        login_form lf = new login_form();
        lf.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_backButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(App_MorseCode.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(App_MorseCode.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(App_MorseCode.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(App_MorseCode.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new App_MorseCode().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backButton;
    private javax.swing.JLabel background;
    private javax.swing.JButton clearButton;
    private javax.swing.JComboBox<String> comboBox;
    private javax.swing.JButton convertButon;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea outputField;
    private javax.swing.JButton playButton;
    private javax.swing.JLabel title;
    private javax.swing.JTextArea userText;
    // End of variables declaration//GEN-END:variables
}
